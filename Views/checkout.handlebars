<style>
    

 * {  
margin: 0;  
padding: 0;  
}  
body {  
font: 71%/1.5 Verdana, Sans-Serif;  
background: #eee;  
}  
#container {  
margin: 100px auto;  
width: 220px;  
float:left;
}   
.letter{
    padding:5px auto;
}
#keyboard {  
margin: 0;  
padding:0;  
list-style: none;  
}  
    #keyboard li {  
    float: left;  
    margin: 0 5px 5px 0;  
    width: 60px;  
    height: 60px;  
    font-size: 24px;
    line-height: 60px;  
    text-align: center;  
    background: #fff;  
    border: 1px solid #f9f9f9;  
    border-radius: 5px;  
    }  
        .capslock, .tab, .left-shift, .clearl, .switch {  
        clear: left;  
        }  
            #keyboard .tab, #keyboard .delete {  
            width: 70px;  
            }  
            #keyboard .capslock {  
            width: 80px;  
            }  
            #keyboard .return {  
            width: 90px;  
            }  
            #keyboard .left-shift{  
            width: 70px;  
            }  

            #keyboard .switch {
            width: 90px;
            }
            #keyboard .rightright-shift {  
            width: 109px;  
            }  
        .lastitem {  
        margin-right: 0;  
        }  
        .uppercase {  
        text-transform: uppercase;  
        }  
        #keyboard .space {  
        float: left;
        width: 556px;  
        }  
        #keyboard .switch, #keyboard .space, #keyboard .return{
        font-size: 16px;
        }
        .on {  
        display: none;  
        }  
        #keyboard li:hover {  
        position: relative;  
        top: 1px;  
        left: 1px;  
        border-color: #e5e5e5;  
        cursor: pointer;  
        }  

    .Lunchcode {
        text-align: left;
    }


</style>

<h1>Who are you? </h1>

<form class="form-horizontal" role="form"
      action="/process?" method="POST">

    <div class="Lunchcode">
        <label for="usr">Lunch Code:</label>
        <input name="pin" type="text" class="form-control" id="usr">
    </div>

    <div class="col"><button type="submit" class="go">Go</button></div>

</form>
    <div id="container">
        <ul id="keyboard">

            <li class="letter num" data-num="1">1</li>
            <li class="letter num" data-num="2">2</li>
            <li class="letter num" data-num="3">3</li>
            <li class="letter clear1 num" data-num="4">4</li>
            <li class="letter num" data-num="5">5</li>
            <li class="letter num" data-num="6">6</li>

            <li class="letter clear1 num" data-num="7">7</li>
            <li class="letter num" data-num="8">8</li>
            <li class="letter num" data-num="9">9</li>
            <li class="letter num" data-num="0">0</li>
            <li class="return num delete" data-num="">return</li>
        </ul>
    </div>

<script>
    (function () {
        "use strict";

        // Shortcut to get elements
        var el = function (element) {
            if (element.charAt(0) === "#") { // If passed an ID...
                return document.querySelector(element); // ... returns single element
            }

            return document.querySelectorAll(element); // Otherwise, returns a nodelist
        };

        // Variables
        var viewer = el("#viewer"), // Calculator screen where result is displayed
            equals = el("#equals"), // Equal button
            nums = el(".num"), // List of numbers
            theNum = "", // Current number
            oldNum = "", // First number
            resultNum, // Result
            operator; // Batman

        // When: Number is clicked. Get the current number selected
        var setNum = function () {
            if (resultNum) { // If a result was displayed, reset number
                theNum = this.getAttribute("data-num");
                resultNum = "";
            } else { // Otherwise, add digit to previous number (this is a string!)
                theNum += this.getAttribute("data-num");
            }

            // viewer.innerHTML = theNum; // Display current number
            usr.value = theNum;
        };

        // When: Operator is clicked. Pass number to oldNum and save operator
        var moveNum = function () {
            oldNum = theNum;
            theNum = "";
            operator = this.getAttribute("data-ops");

            equals.setAttribute("data-result", ""); // Reset result in attr
        };

        // When: Equals is clicked. Calculate result
        var displayNum = function () {

            // Convert string input to numbers
            oldNum = parseFloat(oldNum);
            theNum = parseFloat(theNum);

            // Display result, finally!
            viewer.innerHTML = resultNum;
            equals.setAttribute("data-result", resultNum);

            // Now reset oldNum & keep result
            oldNum = 0;
            theNum = resultNum;
        };

        // When: Clear button is pressed. Clear everything
        var clearAll = function () {
            oldNum = "";
            theNum = "";
            usr.value = theNum;
        };

        /* The click events */
        // Add click event to numbers
        for (var i = 0, l = nums.length; i < l; i++) {
            nums[i].onclick = setNum;
        }

        // Add click event to clear button
        el("#clear").onclick = clearAll;
   
    }());
</script>

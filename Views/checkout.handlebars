<h1 id="responsible">Next time, be responsible</h1>
<div class="row">
        <div class="col-md-4">
<form class="form-horizontal" role="form"
      action="/process?" method="POST">

    <div class="Lunchcode">
        <label for="usr">LUNCH CODE:</label>
        <input name="pin" type="text" class="form-control" id="usr" maxlength="4" pattern="\d{4}" required/>
        {{!-- <input type="text"  name="pin"  maxlength="4" id="pin" pattern="\d{4}" class="form-control" id="usr" required/> --}}
    </div>
    <div id="container">
        <ul id="keyboard">

            <li class="letter num" data-num="1">1</li>
            <li class="letter num" data-num="2">2</li>
            <li class="letter num" data-num="3">3</li>
            <li class="letter clear1 num" data-num="4">4</li>
            <li class="letter num" data-num="5">5</li>
            <li class="letter num" data-num="6">6</li>

            <li class="letter clear1 num" data-num="7">7</li>
            <li class="letter num" data-num="8">8</li>
            <li class="letter num" data-num="9">9</li>
            <li class="letter num" data-num="0">0</li>
            <li class="letter num" id="clear">C</li>
            <button  type="submit">GO</button>
        </ul>     
     </div>
    </div>
</form>
  
 <div class="col-md-8">
    <div id="outer">
        <table id="postIt">
          
    <tr>
        <th id="title">LOANER INFORMATION</th>
    </tr> 
    {{#each studentlist}} 
    <tr>
        <td><strong>First Name:</strong> {{this.First_Name}}</td>
        <td><strong>Last Name:</strong> {{this.Last_Name}}</td>
         

     <td><div id="floatRight">
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#Modal{{this.ID}}" id="hey">More info
</button>
</div>
</td>
    </tr>

{{/each}}
</table>
 
</div>
     {{#each studentlist}}     
    <!-- Modal -->
<div class="modal fade" id="Modal{{this.ID}}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Loaner Information</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
          <table>
    <tr>
        <td><strong>Name:</strong>{{this.First_Name}} {{this.Last_Name}}</td>
    </tr>
         <tr>
        <td><strong>Grade:</strong>{{this.Grade_Level}}</td>
    </tr>
    <tr>
        <td><strong>Graudation Year:</strong> {{this.Sched_YearOfGraduation}}</td>
    </tr>
    <tr>
        <td><strong>Lunch Code:</strong> {{this.ID}}</td>
    </tr>
   <tr>
        <td><strong>CDI Number: </strong> {{cdi}}</td>
    </tr>
    <tr>
        <td><strong>Serial Number:</strong> {{serial}}</td>
    </tr>
    </table>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        
                               </div>
                          </div>
                     </div>
                </div>
            {{/each}}
                         
    
<script>
    (function () {
        "use strict";

        // Shortcut to get elements
        var el = function (element) {
            if (element.charAt(0) === "#") { // If passed an ID...
                return document.querySelector(element); // ... returns single element
            }

            return document.querySelectorAll(element); // Otherwise, returns a nodelist
        };

        // Variables
        var viewer = el("#viewer"), // Calculator screen where result is displayed
            equals = el("#equals"), // Equal button
            nums = el(".num"), // List of numbers
            theNum = "", // Current number
            oldNum = "", // First number
            resultNum, // Result
            operator; // Batman

        // When: Number is clicked. Get the current number selected
        var setNum = function () {
            if (resultNum) { // If a result was displayed, reset number
                theNum = this.getAttribute("data-num");
                resultNum = "";
            } else { // Otherwise, add digit to previous number (this is a string!)
                theNum += this.getAttribute("data-num");
            }

            // viewer.innerHTML = theNum; // Display current number
            usr.value = theNum;
        };

        // When: Operator is clicked. Pass number to oldNum and save operator
        var moveNum = function () {
            oldNum = theNum;
            theNum = "";
            operator = this.getAttribute("data-ops");

            equals.setAttribute("data-result", ""); // Reset result in attr
        };

        // When: Equals is clicked. Calculate result
        var displayNum = function () {

            // Convert string input to numbers
            oldNum = parseFloat(oldNum);
            theNum = parseFloat(theNum);

            // Display result, finally!
            viewer.innerHTML = resultNum;
            equals.setAttribute("data-result", resultNum);

            // Now reset oldNum & keep result
            oldNum = 0;
            theNum = resultNum;
        };

        // When: Clear button is pressed. Clear everything
        var clearAll = function () {
            oldNum = "";
            theNum = "";
            usr.value = theNum;
        };

        /* The click events */
        // Add click event to numbers
        for (var i = 0, l = nums.length; i < l; i++) {
            nums[i].onclick = setNum;
        }

        // Add click event to clear button
        el("#clear").onclick = clearAll;
   
    }());
</script>
